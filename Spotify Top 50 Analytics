# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL.

## Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

## Then I inserted the Spotify Data .csv into the table.

## Next, I explored the data using the following SQL and answered the following specific questions:

### 1. Determine the avg popularity, danceability, and energy by artist and track. 
SELECT artist_name
     , track_name
     , AVG(popularity)
     , AVG(danceability)
     , AVG(energy)
FROM Spotifydata
GROUP BY artist_name
       , track_name;

### 2. Starting with most popular, who are the Top 10 most popular artists?
SELECT artist_name
     , track_name
     , popularity
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10;

### 3. Which artist has the highest average popularity among their songs?
SELECT DISTINCT artist_name
     , AVG(popularity) AS popularity
FROM Spotifydata
GROUP BY artist_name
ORDER BY popularity DESC
LIMIT 1;

### 4. What is the average dancebility and energy level of all songs, grouped by key?
SELECT song_key
     , AVG(danceability)
     , AVG(energy)
FROM Spotifydata
GROUP BY song_key;

### 5. Which song has the highest tempo and which artist performed it?
SELECT artist_name
     , MAX(tempo)
FROM Spotifydata;
